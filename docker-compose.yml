services:
  caddy:
    image: caddy:2-alpine
    platform: linux/arm64
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./data:/data
      - caddy_config:/config
    networks:
      - edge-network
    depends_on:
      - auth-service
      - gpio-service
      - metrics-service
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgis:
    image: postgis/postgis:15-3.3
    platform: linux/arm64
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-gisdb}
      - POSTGRES_USER=${POSTGRES_USER:-gisuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-temppwd}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - edge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-gisuser} -d ${POSTGRES_DB:-gisdb}"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
    restart: unless-stopped
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=${DEBUG:-0}
      - POSTGRES_HOST=postgis
      - POSTGRES_DB=${POSTGRES_DB:-gisdb}
      - POSTGRES_USER=${POSTGRES_USER:-gisuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-temppwd}
    networks:
      - edge-network
    depends_on:
      - postgis
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  gpio-service:
    build:
      context: ./services/gpio
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
    restart: unless-stopped
    privileged: true
    devices:
      - "/dev/gpiomem:/dev/gpiomem"
      - "/dev/i2c-1:/dev/i2c-1"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=${DEBUG:-0}
    networks:
      - edge-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  metrics-service:
    build:
      context: ./services/metrics
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
        - linux/amd64
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=postgis
      - POSTGRES_DB=${POSTGRES_DB:-gisdb}
      - POSTGRES_USER=${POSTGRES_USER:-gisuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-temppwd}
      - METRICS_UPDATE_INTERVAL=15s
    networks:
      - edge-network
    depends_on:
      - postgis
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  caddy_config:
  postgres_data:

networks:
  edge-network:
    name: edge-network
    driver: bridge
